/*
 * PIE_Enum.h
 *
 *  Created on: 11 mar. 2021
 *      Author: vyldram
 */

#ifndef XDRIVER_MCU_PIE_PERIPHERAL_XHEADER_PIE_ENUM_H_
#define XDRIVER_MCU_PIE_PERIPHERAL_XHEADER_PIE_ENUM_H_

#include <xUtils/Standard/Standard.h>

typedef enum
{
    PIE_enOK = 0U,
    PIE_enERROR = 1U,
}PIE_nSTATUS;

typedef enum
{
    PIE_enDISABLE = 0U,
    PIE_enENABLE = 1U,
    PIE_enENABLE_UNDEF = 0xFFFFU,
}PIE_nENABLE;

typedef enum
{
    PIE_enNOPENDING = 0U,
    PIE_enPENDING = 1U,
    PIE_enPENDING_UNDEF = 0xFFFFU,
}PIE_nPENDING;

typedef enum
{
    PIE_enNOACTIVE = 0U,
    PIE_enACTIVE = 1U,
}PIE_nACTIVE;

typedef enum
{
    PIE_enPRI0 = 0U,
    PIE_enPRI1 = 1U,
    PIE_enPRI2 = 2U,
    PIE_enPRI3 = 3U,
    PIE_enPRI4 = 4U,
    PIE_enPRI5 = 5U,
    PIE_enPRI6 = 6U,
    PIE_enPRI7 = 7U,
    PIE_enMIN = 7U,
    PIE_enDEFAULT = 0xFFFFU,
}PIE_nPRIORITY;

typedef enum
{
    PIE_enVECTOR_Reset = 0U,
    PIE_enVECTOR_INT1 = 1U,
    PIE_enVECTOR_INT2 = 2U,
    PIE_enVECTOR_INT3 = 3U,
    PIE_enVECTOR_INT4 = 4U,
    PIE_enVECTOR_INT5 = 5U,
    PIE_enVECTOR_INT6 = 6U,
    PIE_enVECTOR_INT7 = 7U,
    PIE_enVECTOR_INT8 = 8U,
    PIE_enVECTOR_INT9 = 9U,
    PIE_enVECTOR_INT10 = 10U,
    PIE_enVECTOR_INT11 = 11U,
    PIE_enVECTOR_INT12 = 12U,
    PIE_enVECTOR_TIMER1 = 13U,
    PIE_enVECTOR_TIMER2 = 14U,
    PIE_enVECTOR_DATALOG = 15U,
    PIE_enVECTOR_RTOSINT = 16U,
    PIE_enVECTOR_EMUINT = 17U,
    PIE_enVECTOR_NMI = 18U,
    PIE_enVECTOR_ILLEGAL = 19U,
    PIE_enVECTOR_USER1 = 20U,
    PIE_enVECTOR_USER2 = 21U,
    PIE_enVECTOR_USER3 = 22U,
    PIE_enVECTOR_USER4 = 23U,
    PIE_enVECTOR_USER5 = 24U,
    PIE_enVECTOR_USER6 = 25U,
    PIE_enVECTOR_USER7 = 26U,
    PIE_enVECTOR_USER8 = 27U,
    PIE_enVECTOR_USER9 = 28U,
    PIE_enVECTOR_USER10 = 29U,
    PIE_enVECTOR_USER11 = 30U,
    PIE_enVECTOR_USER12 = 31U,
    PIE_enVECTOR_ADCA1 = ((uint16_t) 0x0000U) + 32U,
    PIE_enVECTOR_ADCB1 = ((uint16_t) 0x0001U) + 32U,
    PIE_enVECTOR_ADCC1 = ((uint16_t) 0x0002U) + 32U,
    PIE_enVECTOR_XINT1 = ((uint16_t) 0x0003U) + 32U,
    PIE_enVECTOR_XINT2 = ((uint16_t) 0x0004U) + 32U,
    PIE_enVECTOR_ADCD1 = ((uint16_t) 0x0005U) + 32U,
    PIE_enVECTOR_TIMER0 = ((uint16_t) 0x0006U) + 32U,
    PIE_enVECTOR_WAKE = ((uint16_t) 0x0007U) + 32U,
    PIE_enVECTOR_RES128 = ((uint16_t) 0x0008U) + 32U,
    PIE_enVECTOR_RES129 = ((uint16_t) 0x0009U) + 32U,
    PIE_enVECTOR_RES130 = ((uint16_t) 0x000AU) + 32U,
    PIE_enVECTOR_RES131 = ((uint16_t) 0x000BU) + 32U,
    PIE_enVECTOR_IPC1 = ((uint16_t) 0x000CU) + 32U,
    PIE_enVECTOR_IPC2 = ((uint16_t) 0x000DU) + 32U,
    PIE_enVECTOR_IPC3 = ((uint16_t) 0x000EU) + 32U,
    PIE_enVECTOR_IPC4 = ((uint16_t) 0x000FU) + 32U,
    PIE_enVECTOR_EPWM1_TZ = ((uint16_t) 0x0010U) + 32U,
    PIE_enVECTOR_EPWM2_TZ = ((uint16_t) 0x0011U) + 32U,
    PIE_enVECTOR_EPWM3_TZ = ((uint16_t) 0x0012U) + 32U,
    PIE_enVECTOR_EPWM4_TZ = ((uint16_t) 0x0013U) + 32U,
    PIE_enVECTOR_EPWM5_TZ = ((uint16_t) 0x0014U) + 32U,
    PIE_enVECTOR_EPWM6_TZ = ((uint16_t) 0x0015U) + 32U,
    PIE_enVECTOR_EPWM7_TZ = ((uint16_t) 0x0016U) + 32U,
    PIE_enVECTOR_EPWM8_TZ = ((uint16_t) 0x0017U) + 32U,
    PIE_enVECTOR_EPWM9_TZ = ((uint16_t) 0x0018U) + 32U,
    PIE_enVECTOR_EPWM10_TZ = ((uint16_t) 0x0019U) + 32U,
    PIE_enVECTOR_EPWM11_TZ = ((uint16_t) 0x001AU) + 32U,
    PIE_enVECTOR_EPWM12_TZ = ((uint16_t) 0x001BU) + 32U,
    PIE_enVECTOR_RES140 = ((uint16_t) 0x001CU) + 32U,
    PIE_enVECTOR_RES141 = ((uint16_t) 0x001DU) + 32U,
    PIE_enVECTOR_RES142 = ((uint16_t) 0x001EU) + 32U,
    PIE_enVECTOR_RES143 = ((uint16_t) 0x001FU) + 32U,
    PIE_enVECTOR_EPWM1 = ((uint16_t) 0x0020U) + 32U,
    PIE_enVECTOR_EPWM2 = ((uint16_t) 0x0021U) + 32U,
    PIE_enVECTOR_EPWM3 = ((uint16_t) 0x0022U) + 32U,
    PIE_enVECTOR_EPWM4 = ((uint16_t) 0x0023U) + 32U,
    PIE_enVECTOR_EPWM5 = ((uint16_t) 0x0024U) + 32U,
    PIE_enVECTOR_EPWM6 = ((uint16_t) 0x0025U) + 32U,
    PIE_enVECTOR_EPWM7 = ((uint16_t) 0x0026U) + 32U,
    PIE_enVECTOR_EPWM8 = ((uint16_t) 0x0027U) + 32U,
    PIE_enVECTOR_EPWM9 = ((uint16_t) 0x0028U) + 32U,
    PIE_enVECTOR_EPWM10 = ((uint16_t) 0x0029U) + 32U,
    PIE_enVECTOR_EPWM11 = ((uint16_t) 0x002AU) + 32U,
    PIE_enVECTOR_EPWM12 = ((uint16_t) 0x002BU) + 32U,
    PIE_enVECTOR_RES148 = ((uint16_t) 0x002CU) + 32U,
    PIE_enVECTOR_RES149 = ((uint16_t) 0x002DU) + 32U,
    PIE_enVECTOR_RES150 = ((uint16_t) 0x002EU) + 32U,
    PIE_enVECTOR_RES151 = ((uint16_t) 0x002FU) + 32U,
    PIE_enVECTOR_ECAP1 = ((uint16_t) 0x0030U) + 32U,
    PIE_enVECTOR_ECAP2 = ((uint16_t) 0x0031U) + 32U,
    PIE_enVECTOR_ECAP3 = ((uint16_t) 0x0032U) + 32U,
    PIE_enVECTOR_ECAP4 = ((uint16_t) 0x0033U) + 32U,
    PIE_enVECTOR_ECAP5 = ((uint16_t) 0x0034U) + 32U,
    PIE_enVECTOR_ECAP6 = ((uint16_t) 0x0035U) + 32U,
    PIE_enVECTOR_RES62 = ((uint16_t) 0x0036U) + 32U,
    PIE_enVECTOR_RES63 = ((uint16_t) 0x0037U) + 32U,
    PIE_enVECTOR_RES152 = ((uint16_t) 0x0038U) + 32U,
    PIE_enVECTOR_RES153 = ((uint16_t) 0x0039U) + 32U,
    PIE_enVECTOR_RES154 = ((uint16_t) 0x003AU) + 32U,
    PIE_enVECTOR_RES155 = ((uint16_t) 0x003BU) + 32U,
    PIE_enVECTOR_RES156 = ((uint16_t) 0x003CU) + 32U,
    PIE_enVECTOR_RES157 = ((uint16_t) 0x003DU) + 32U,
    PIE_enVECTOR_RES158 = ((uint16_t) 0x003EU) + 32U,
    PIE_enVECTOR_RES159 = ((uint16_t) 0x003FU) + 32U,
    PIE_enVECTOR_EQEP1 = ((uint16_t) 0x0040U) + 32U,
    PIE_enVECTOR_EQEP2 = ((uint16_t) 0x0041U) + 32U,
    PIE_enVECTOR_EQEP3 = ((uint16_t) 0x0042U) + 32U,
    PIE_enVECTOR_RES67 = ((uint16_t) 0x0043U) + 32U,
    PIE_enVECTOR_CLB1 = ((uint16_t) 0x0044U) + 32U,
    PIE_enVECTOR_CLB2 = ((uint16_t) 0x0045U) + 32U,
    PIE_enVECTOR_CLB3 = ((uint16_t) 0x0046U) + 32U,
    PIE_enVECTOR_CLB4 = ((uint16_t) 0x0047U) + 32U,
    PIE_enVECTOR_SD1 = ((uint16_t) 0x0048U) + 32U,
    PIE_enVECTOR_SD2 = ((uint16_t) 0x0049U) + 32U,
    PIE_enVECTOR_RES162 = ((uint16_t) 0x004AU) + 32U,
    PIE_enVECTOR_RES163 = ((uint16_t) 0x004BU) + 32U,
    PIE_enVECTOR_RES164 = ((uint16_t) 0x004CU) + 32U,
    PIE_enVECTOR_RES165 = ((uint16_t) 0x004DU) + 32U,
    PIE_enVECTOR_RES166 = ((uint16_t) 0x004EU) + 32U,
    PIE_enVECTOR_RES167 = ((uint16_t) 0x004FU) + 32U,
    PIE_enVECTOR_SPIA_RX = ((uint16_t) 0x0050U) + 32U,
    PIE_enVECTOR_SPIA_TX = ((uint16_t) 0x0051U) + 32U,
    PIE_enVECTOR_SPIB_RX = ((uint16_t) 0x0052U) + 32U,
    PIE_enVECTOR_SPIB_TX = ((uint16_t) 0x0053U) + 32U,
    PIE_enVECTOR_MCBSPA_RX = ((uint16_t) 0x0054U) + 32U,
    PIE_enVECTOR_MCBSPA_TX = ((uint16_t) 0x0055U) + 32U,
    PIE_enVECTOR_MCBSPB_RX = ((uint16_t) 0x0056U) + 32U,
    PIE_enVECTOR_MCBSPB_TX = ((uint16_t) 0x0057U) + 32U,
    PIE_enVECTOR_SPIC_RX = ((uint16_t) 0x0058U) + 32U,
    PIE_enVECTOR_SPIC_TX = ((uint16_t) 0x0059U) + 32U,
    PIE_enVECTOR_RES170 = ((uint16_t) 0x005AU) + 32U,
    PIE_enVECTOR_RES171 = ((uint16_t) 0x005BU) + 32U,
    PIE_enVECTOR_RES172 = ((uint16_t) 0x005CU) + 32U,
    PIE_enVECTOR_RES173 = ((uint16_t) 0x005DU) + 32U,
    PIE_enVECTOR_RES174 = ((uint16_t) 0x005EU) + 32U,
    PIE_enVECTOR_RES175 = ((uint16_t) 0x005FU) + 32U,
    PIE_enVECTOR_DMA_CH1 = ((uint16_t) 0x0060U) + 32U,
    PIE_enVECTOR_DMA_CH2 = ((uint16_t) 0x0061U) + 32U,
    PIE_enVECTOR_DMA_CH3 = ((uint16_t) 0x0062U) + 32U,
    PIE_enVECTOR_DMA_CH4 = ((uint16_t) 0x0063U) + 32U,
    PIE_enVECTOR_DMA_CH5 = ((uint16_t) 0x0064U) + 32U,
    PIE_enVECTOR_DMA_CH6 = ((uint16_t) 0x0065U) + 32U,
    PIE_enVECTOR_RES86 = ((uint16_t) 0x0066U) + 32U,
    PIE_enVECTOR_RES87 = ((uint16_t) 0x0067U) + 32U,
    PIE_enVECTOR_RES176 = ((uint16_t) 0x0068U) + 32U,
    PIE_enVECTOR_RES177 = ((uint16_t) 0x0069U) + 32U,
    PIE_enVECTOR_RES178 = ((uint16_t) 0x006AU) + 32U,
    PIE_enVECTOR_RES179 = ((uint16_t) 0x006BU) + 32U,
    PIE_enVECTOR_RES180 = ((uint16_t) 0x006CU) + 32U,
    PIE_enVECTOR_RES181 = ((uint16_t) 0x006DU) + 32U,
    PIE_enVECTOR_RES182 = ((uint16_t) 0x006EU) + 32U,
    PIE_enVECTOR_RES183 = ((uint16_t) 0x006FU) + 32U,
    PIE_enVECTOR_I2CA = ((uint16_t) 0x0070U) + 32U,
    PIE_enVECTOR_I2CA_FIFO = ((uint16_t) 0x0071U) + 32U,
    PIE_enVECTOR_I2CB = ((uint16_t) 0x0072U) + 32U,
    PIE_enVECTOR_I2CB_FIFO = ((uint16_t) 0x0073U) + 32U,
    PIE_enVECTOR_SCIC_RX = ((uint16_t) 0x0074U) + 32U,
    PIE_enVECTOR_SCIC_TX = ((uint16_t) 0x0075U) + 32U,
    PIE_enVECTOR_SCID_RX = ((uint16_t) 0x0076U) + 32U,
    PIE_enVECTOR_SCID_TX = ((uint16_t) 0x0077U) + 32U,
    PIE_enVECTOR_RES184 = ((uint16_t) 0x0078U) + 32U,
    PIE_enVECTOR_RES185 = ((uint16_t) 0x0079U) + 32U,
    PIE_enVECTOR_RES186 = ((uint16_t) 0x007AU) + 32U,
    PIE_enVECTOR_RES187 = ((uint16_t) 0x007BU) + 32U,
    PIE_enVECTOR_RES188 = ((uint16_t) 0x007CU) + 32U,
    PIE_enVECTOR_RES189 = ((uint16_t) 0x007DU) + 32U,
    #if defined(CPU1)
    PIE_enVECTOR_UPPA = ((uint16_t) 0x007EU) + 32U,
    #else
    PIE_enVECTOR_RES190 = ((uint16_t) 0x007EU) + 32U,
    #endif
    PIE_enVECTOR_RES191 = ((uint16_t) 0x007FU) + 32U,
    PIE_enVECTOR_SCIA_RX = ((uint16_t) 0x0080U) + 32U,
    PIE_enVECTOR_SCIA_TX = ((uint16_t) 0x0081U) + 32U,
    PIE_enVECTOR_SCIB_RX = ((uint16_t) 0x0082U) + 32U,
    PIE_enVECTOR_SCIB_TX = ((uint16_t) 0x0083U) + 32U,
    PIE_enVECTOR_CANA0 = ((uint16_t) 0x0084U) + 32U,
    PIE_enVECTOR_CANA1 = ((uint16_t) 0x0085U) + 32U,
    PIE_enVECTOR_CANB0 = ((uint16_t) 0x0086U) + 32U,
    PIE_enVECTOR_CANB1 = ((uint16_t) 0x0087U) + 32U,
    PIE_enVECTOR_RES192 = ((uint16_t) 0x0088U) + 32U,
    PIE_enVECTOR_RES193 = ((uint16_t) 0x0089U) + 32U,
    PIE_enVECTOR_RES194 = ((uint16_t) 0x008AU) + 32U,
    PIE_enVECTOR_RES195 = ((uint16_t) 0x008BU) + 32U,
    PIE_enVECTOR_RES196 = ((uint16_t) 0x008CU) + 32U,
    PIE_enVECTOR_RES197 = ((uint16_t) 0x008DU) + 32U,
    #if defined(CPU1)
    PIE_enVECTOR_USBA = ((uint16_t) 0x008EU) + 32U,
    #else
    PIE_enVECTOR_RES198 = ((uint16_t) 0x008EU) + 32U,
    #endif
    PIE_enVECTOR_RES199 = ((uint16_t) 0x008FU) + 32U,
    PIE_enVECTOR_ADCA_EVT = ((uint16_t) 0x0090U) + 32U,
    PIE_enVECTOR_ADCA2 = ((uint16_t) 0x0091U) + 32U,
    PIE_enVECTOR_ADCA3 = ((uint16_t) 0x0092U) + 32U,
    PIE_enVECTOR_ADCA4 = ((uint16_t) 0x0093U) + 32U,
    PIE_enVECTOR_ADCB_EVT = ((uint16_t) 0x0094U) + 32U,
    PIE_enVECTOR_ADCB2 = ((uint16_t) 0x0095U) + 32U,
    PIE_enVECTOR_ADCB3 = ((uint16_t) 0x0096U) + 32U,
    PIE_enVECTOR_ADCB4 = ((uint16_t) 0x0097U) + 32U,
    PIE_enVECTOR_ADCC_EVT = ((uint16_t) 0x0098U) + 32U,
    PIE_enVECTOR_ADCC2 = ((uint16_t) 0x0099U) + 32U,
    PIE_enVECTOR_ADCC3 = ((uint16_t) 0x009AU) + 32U,
    PIE_enVECTOR_ADCC4 = ((uint16_t) 0x009BU) + 32U,
    PIE_enVECTOR_ADCD_EVT = ((uint16_t) 0x009CU) + 32U,
    PIE_enVECTOR_ADCD2 = ((uint16_t) 0x009DU) + 32U,
    PIE_enVECTOR_ADCD3 = ((uint16_t) 0x009EU) + 32U,
    PIE_enVECTOR_ADCD4 = ((uint16_t) 0x009FU) + 32U,
    PIE_enVECTOR_CLA1_1 = ((uint16_t) 0x00A0U) + 32U,
    PIE_enVECTOR_CLA1_2 = ((uint16_t) 0x00A1U) + 32U,
    PIE_enVECTOR_CLA1_3 = ((uint16_t) 0x00A2U) + 32U,
    PIE_enVECTOR_CLA1_4 = ((uint16_t) 0x00A3U) + 32U,
    PIE_enVECTOR_CLA1_5 = ((uint16_t) 0x00A4U) + 32U,
    PIE_enVECTOR_CLA1_6 = ((uint16_t) 0x00A5U) + 32U,
    PIE_enVECTOR_CLA1_7 = ((uint16_t) 0x00A6U) + 32U,
    PIE_enVECTOR_CLA1_8 = ((uint16_t) 0x00A7U) + 32U,
    PIE_enVECTOR_RES208 = ((uint16_t) 0x00A8U) + 32U,
    PIE_enVECTOR_RES209 = ((uint16_t) 0x00A9U) + 32U,
    PIE_enVECTOR_RES210 = ((uint16_t) 0x00AAU) + 32U,
    PIE_enVECTOR_RES211 = ((uint16_t) 0x00ABU) + 32U,
    PIE_enVECTOR_RES212 = ((uint16_t) 0x00ACU) + 32U,
    PIE_enVECTOR_RES213 = ((uint16_t) 0x00ADU) + 32U,
    PIE_enVECTOR_RES214 = ((uint16_t) 0x00AEU) + 32U,
    PIE_enVECTOR_RES215 = ((uint16_t) 0x00AFU) + 32U,
    PIE_enVECTOR_XINT3 = ((uint16_t) 0x00B0U) + 32U,
    PIE_enVECTOR_XINT4 = ((uint16_t) 0x00B1U) + 32U,
    PIE_enVECTOR_XINT5 = ((uint16_t) 0x00B2U) + 32U,
    PIE_enVECTOR_RES123 = ((uint16_t) 0x00B3U) + 32U,
    PIE_enVECTOR_RES124 = ((uint16_t) 0x00B4U) + 32U,
    PIE_enVECTOR_VCU = ((uint16_t) 0x00B5U) + 32U,
    PIE_enVECTOR_FPU_OVERFLOW = ((uint16_t) 0x00B6U) + 32U,
    PIE_enVECTOR_FPU_UNDERFLOW = ((uint16_t) 0x00B7U) + 32U,
    PIE_enVECTOR_EMIF_ERROR = ((uint16_t) 0x00B8U) + 32U,
    PIE_enVECTOR_RAM_CORRECTABLE_ERROR = ((uint16_t) 0x00B9U) + 32U,
    PIE_enVECTOR_FLASH_CORRECTABLE_ERROR = ((uint16_t) 0x00BAU) + 32U,
    PIE_enVECTOR_RAM_ACCESS_VIOLATION = ((uint16_t) 0x00BBU) + 32U,
    PIE_enVECTOR_SYS_PLL_SLIP = ((uint16_t) 0x00BCU) + 32U,
    PIE_enVECTOR_AUX_PLL_SLIP = ((uint16_t) 0x00BDU) + 32U,
    PIE_enVECTOR_CLA_OVERFLOW = ((uint16_t) 0x00BEU) + 32U,
    PIE_enVECTOR_CLA_UNDERFLOW = ((uint16_t) 0x00BFU) + 32U,
}PIE_nVECTOR;

typedef enum
{
      Reset_IRQn = 0U,
      INT1_IRQn = 1U,
      INT2_IRQn = 2U,
      INT3_IRQn = 3U,
      INT4_IRQn = 4U,
      INT5_IRQn = 5U,
      INT6_IRQn = 6U,
      INT7_IRQn = 7U,
      INT8_IRQn = 8U,
      INT9_IRQn = 9U,
      INT10_IRQn = 10U,
      INT11_IRQn = 11U,
      INT12_IRQn = 12U,
      TIMER1_IRQn = 13U,
      TIMER2_IRQn = 14U,
      DATALOG_IRQn = 15U,
      RTOSINT_IRQn = 16U,
      EMUINT_IRQn = 17U,
      NMI_IRQn = 18U,
      ILLEGAL_IRQn = 19U,
      USER1_IRQn = 20U,
      USER2_IRQn = 21U,
      USER3_IRQn = 22U,
      USER4_IRQn = 23U,
      USER5_IRQn = 24U,
      USER6_IRQn = 25U,
      USER7_IRQn = 26U,
      USER8_IRQn = 27U,
      USER9_IRQn = 28U,
      USER10_IRQn = 29U,
      USER11_IRQn = 30U,
      USER12_IRQn = 31U,
      ADCA1_IRQn = ((uint16_t) 0x0000U) + 32U,
      ADCB1_IRQn = ((uint16_t) 0x0001U) + 32U,
      ADCC1_IRQn = ((uint16_t) 0x0002U) + 32U,
      XINT1_IRQn = ((uint16_t) 0x0003U) + 32U,
      XINT2_IRQn = ((uint16_t) 0x0004U) + 32U,
      ADCD1_IRQn = ((uint16_t) 0x0005U) + 32U,
      TIMER0_IRQn = ((uint16_t) 0x0006U) + 32U,
      WAKE_IRQn = ((uint16_t) 0x0007U) + 32U,
      RES128_IRQn = ((uint16_t) 0x0008U) + 32U,
      RES129_IRQn = ((uint16_t) 0x0009U) + 32U,
      RES130_IRQn = ((uint16_t) 0x000AU) + 32U,
      RES131_IRQn = ((uint16_t) 0x000BU) + 32U,
      IPC1_IRQn = ((uint16_t) 0x000CU) + 32U,
      IPC2_IRQn = ((uint16_t) 0x000DU) + 32U,
      IPC3_IRQn = ((uint16_t) 0x000EU) + 32U,
      IPC4_IRQn = ((uint16_t) 0x000FU) + 32U,
      EPWM1_TZ_IRQn = ((uint16_t) 0x0010U) + 32U,
      EPWM2_TZ_IRQn = ((uint16_t) 0x0011U) + 32U,
      EPWM3_TZ_IRQn = ((uint16_t) 0x0012U) + 32U,
      EPWM4_TZ_IRQn = ((uint16_t) 0x0013U) + 32U,
      EPWM5_TZ_IRQn = ((uint16_t) 0x0014U) + 32U,
      EPWM6_TZ_IRQn = ((uint16_t) 0x0015U) + 32U,
      EPWM7_TZ_IRQn = ((uint16_t) 0x0016U) + 32U,
      EPWM8_TZ_IRQn = ((uint16_t) 0x0017U) + 32U,
      EPWM9_TZ_IRQn = ((uint16_t) 0x0018U) + 32U,
      EPWM10_TZ_IRQn = ((uint16_t) 0x0019U) + 32U,
      EPWM11_TZ_IRQn = ((uint16_t) 0x001AU) + 32U,
      EPWM12_TZ_IRQn = ((uint16_t) 0x001BU) + 32U,
      RES140_IRQn = ((uint16_t) 0x001CU) + 32U,
      RES141_IRQn = ((uint16_t) 0x001DU) + 32U,
      RES142_IRQn = ((uint16_t) 0x001EU) + 32U,
      RES143_IRQn = ((uint16_t) 0x001FU) + 32U,
      EPWM1_IRQn = ((uint16_t) 0x0020U) + 32U,
      EPWM2_IRQn = ((uint16_t) 0x0021U) + 32U,
      EPWM3_IRQn = ((uint16_t) 0x0022U) + 32U,
      EPWM4_IRQn = ((uint16_t) 0x0023U) + 32U,
      EPWM5_IRQn = ((uint16_t) 0x0024U) + 32U,
      EPWM6_IRQn = ((uint16_t) 0x0025U) + 32U,
      EPWM7_IRQn = ((uint16_t) 0x0026U) + 32U,
      EPWM8_IRQn = ((uint16_t) 0x0027U) + 32U,
      EPWM9_IRQn = ((uint16_t) 0x0028U) + 32U,
      EPWM10_IRQn = ((uint16_t) 0x0029U) + 32U,
      EPWM11_IRQn = ((uint16_t) 0x002AU) + 32U,
      EPWM12_IRQn = ((uint16_t) 0x002BU) + 32U,
      RES148_IRQn = ((uint16_t) 0x002CU) + 32U,
      RES149_IRQn = ((uint16_t) 0x002DU) + 32U,
      RES150_IRQn = ((uint16_t) 0x002EU) + 32U,
      RES151_IRQn = ((uint16_t) 0x002FU) + 32U,
      ECAP1_IRQn = ((uint16_t) 0x0030U) + 32U,
      ECAP2_IRQn = ((uint16_t) 0x0031U) + 32U,
      ECAP3_IRQn = ((uint16_t) 0x0032U) + 32U,
      ECAP4_IRQn = ((uint16_t) 0x0033U) + 32U,
      ECAP5_IRQn = ((uint16_t) 0x0034U) + 32U,
      ECAP6_IRQn = ((uint16_t) 0x0035U) + 32U,
      RES62_IRQn = ((uint16_t) 0x0036U) + 32U,
      RES63_IRQn = ((uint16_t) 0x0037U) + 32U,
      RES152_IRQn = ((uint16_t) 0x0038U) + 32U,
      RES153_IRQn = ((uint16_t) 0x0039U) + 32U,
      RES154_IRQn = ((uint16_t) 0x003AU) + 32U,
      RES155_IRQn = ((uint16_t) 0x003BU) + 32U,
      RES156_IRQn = ((uint16_t) 0x003CU) + 32U,
      RES157_IRQn = ((uint16_t) 0x003DU) + 32U,
      RES158_IRQn = ((uint16_t) 0x003EU) + 32U,
      RES159_IRQn = ((uint16_t) 0x003FU) + 32U,
      EQEP1_IRQn = ((uint16_t) 0x0040U) + 32U,
      EQEP2_IRQn = ((uint16_t) 0x0041U) + 32U,
      EQEP3_IRQn = ((uint16_t) 0x0042U) + 32U,
      RES67_IRQn = ((uint16_t) 0x0043U) + 32U,
      CLB1_IRQn = ((uint16_t) 0x0044U) + 32U,
      CLB2_IRQn = ((uint16_t) 0x0045U) + 32U,
      CLB3_IRQn = ((uint16_t) 0x0046U) + 32U,
      CLB4_IRQn = ((uint16_t) 0x0047U) + 32U,
      SD1_IRQn = ((uint16_t) 0x0048U) + 32U,
      SD2_IRQn = ((uint16_t) 0x0049U) + 32U,
      RES162_IRQn = ((uint16_t) 0x004AU) + 32U,
      RES163_IRQn = ((uint16_t) 0x004BU) + 32U,
      RES164_IRQn = ((uint16_t) 0x004CU) + 32U,
      RES165_IRQn = ((uint16_t) 0x004DU) + 32U,
      RES166_IRQn = ((uint16_t) 0x004EU) + 32U,
      RES167_IRQn = ((uint16_t) 0x004FU) + 32U,
      SPIA_RX_IRQn = ((uint16_t) 0x0050U) + 32U,
      SPIA_TX_IRQn = ((uint16_t) 0x0051U) + 32U,
      SPIB_RX_IRQn = ((uint16_t) 0x0052U) + 32U,
      SPIB_TX_IRQn = ((uint16_t) 0x0053U) + 32U,
      MCBSPA_RX_IRQn = ((uint16_t) 0x0054U) + 32U,
      MCBSPA_TX_IRQn = ((uint16_t) 0x0055U) + 32U,
      MCBSPB_RX_IRQn = ((uint16_t) 0x0056U) + 32U,
      MCBSPB_TX_IRQn = ((uint16_t) 0x0057U) + 32U,
      SPIC_RX_IRQn = ((uint16_t) 0x0058U) + 32U,
      SPIC_TX_IRQn = ((uint16_t) 0x0059U) + 32U,
      RES170_IRQn = ((uint16_t) 0x005AU) + 32U,
      RES171_IRQn = ((uint16_t) 0x005BU) + 32U,
      RES172_IRQn = ((uint16_t) 0x005CU) + 32U,
      RES173_IRQn = ((uint16_t) 0x005DU) + 32U,
      RES174_IRQn = ((uint16_t) 0x005EU) + 32U,
      RES175_IRQn = ((uint16_t) 0x005FU) + 32U,
      DMA_CH1_IRQn = ((uint16_t) 0x0060U) + 32U,
      DMA_CH2_IRQn = ((uint16_t) 0x0061U) + 32U,
      DMA_CH3_IRQn = ((uint16_t) 0x0062U) + 32U,
      DMA_CH4_IRQn = ((uint16_t) 0x0063U) + 32U,
      DMA_CH5_IRQn = ((uint16_t) 0x0064U) + 32U,
      DMA_CH6_IRQn = ((uint16_t) 0x0065U) + 32U,
      RES86_IRQn = ((uint16_t) 0x0066U) + 32U,
      RES87_IRQn = ((uint16_t) 0x0067U) + 32U,
      RES176_IRQn = ((uint16_t) 0x0068U) + 32U,
      RES177_IRQn = ((uint16_t) 0x0069U) + 32U,
      RES178_IRQn = ((uint16_t) 0x006AU) + 32U,
      RES179_IRQn = ((uint16_t) 0x006BU) + 32U,
      RES180_IRQn = ((uint16_t) 0x006CU) + 32U,
      RES181_IRQn = ((uint16_t) 0x006DU) + 32U,
      RES182_IRQn = ((uint16_t) 0x006EU) + 32U,
      RES183_IRQn = ((uint16_t) 0x006FU) + 32U,
      I2CA_IRQn = ((uint16_t) 0x0070U) + 32U,
      I2CA_FIFO_IRQn = ((uint16_t) 0x0071U) + 32U,
      I2CB_IRQn = ((uint16_t) 0x0072U) + 32U,
      I2CB_FIFO_IRQn = ((uint16_t) 0x0073U) + 32U,
      SCIC_RX_IRQn = ((uint16_t) 0x0074U) + 32U,
      SCIC_TX_IRQn = ((uint16_t) 0x0075U) + 32U,
      SCID_RX_IRQn = ((uint16_t) 0x0076U) + 32U,
      SCID_TX_IRQn = ((uint16_t) 0x0077U) + 32U,
      RES184_IRQn = ((uint16_t) 0x0078U) + 32U,
      RES185_IRQn = ((uint16_t) 0x0079U) + 32U,
      RES186_IRQn = ((uint16_t) 0x007AU) + 32U,
      RES187_IRQn = ((uint16_t) 0x007BU) + 32U,
      RES188_IRQn = ((uint16_t) 0x007CU) + 32U,
      RES189_IRQn = ((uint16_t) 0x007DU) + 32U,
 #if defined(CPU1)
      UPPA_IRQn = ((uint16_t) 0x007EU) + 32U,
 #else
      RES190_IRQn = ((uint16_t) 0x007EU) + 32U,
 #endif
      RES191_IRQn = ((uint16_t) 0x007FU) + 32U,
      SCIA_RX_IRQn = ((uint16_t) 0x0080U) + 32U,
      SCIA_TX_IRQn = ((uint16_t) 0x0081U) + 32U,
      SCIB_RX_IRQn = ((uint16_t) 0x0082U) + 32U,
      SCIB_TX_IRQn = ((uint16_t) 0x0083U) + 32U,
      CANA0_IRQn = ((uint16_t) 0x0084U) + 32U,
      CANA1_IRQn = ((uint16_t) 0x0085U) + 32U,
      CANB0_IRQn = ((uint16_t) 0x0086U) + 32U,
      CANB1_IRQn = ((uint16_t) 0x0087U) + 32U,
      RES192_IRQn = ((uint16_t) 0x0088U) + 32U,
      RES193_IRQn = ((uint16_t) 0x0089U) + 32U,
      RES194_IRQn = ((uint16_t) 0x008AU) + 32U,
      RES195_IRQn = ((uint16_t) 0x008BU) + 32U,
      RES196_IRQn = ((uint16_t) 0x008CU) + 32U,
      RES197_IRQn = ((uint16_t) 0x008DU) + 32U,
 #if defined(CPU1)
      USBA_IRQn = ((uint16_t) 0x008EU) + 32U,
 #else
      RES198_IRQn = ((uint16_t) 0x008EU) + 32U,
 #endif
      RES199_IRQn = ((uint16_t) 0x008FU) + 32U,
      ADCA_EVT_IRQn = ((uint16_t) 0x0090U) + 32U,
      ADCA2_IRQn = ((uint16_t) 0x0091U) + 32U,
      ADCA3_IRQn = ((uint16_t) 0x0092U) + 32U,
      ADCA4_IRQn = ((uint16_t) 0x0093U) + 32U,
      ADCB_EVT_IRQn = ((uint16_t) 0x0094U) + 32U,
      ADCB2_IRQn = ((uint16_t) 0x0095U) + 32U,
      ADCB3_IRQn = ((uint16_t) 0x0096U) + 32U,
      ADCB4_IRQn = ((uint16_t) 0x0097U) + 32U,
      ADCC_EVT_IRQn = ((uint16_t) 0x0098U) + 32U,
      ADCC2_IRQn = ((uint16_t) 0x0099U) + 32U,
      ADCC3_IRQn = ((uint16_t) 0x009AU) + 32U,
      ADCC4_IRQn = ((uint16_t) 0x009BU) + 32U,
      ADCD_EVT_IRQn = ((uint16_t) 0x009CU) + 32U,
      ADCD2_IRQn = ((uint16_t) 0x009DU) + 32U,
      ADCD3_IRQn = ((uint16_t) 0x009EU) + 32U,
      ADCD4_IRQn = ((uint16_t) 0x009FU) + 32U,
      CLA1_1_IRQn = ((uint16_t) 0x00A0U) + 32U,
      CLA1_2_IRQn = ((uint16_t) 0x00A1U) + 32U,
      CLA1_3_IRQn = ((uint16_t) 0x00A2U) + 32U,
      CLA1_4_IRQn = ((uint16_t) 0x00A3U) + 32U,
      CLA1_5_IRQn = ((uint16_t) 0x00A4U) + 32U,
      CLA1_6_IRQn = ((uint16_t) 0x00A5U) + 32U,
      CLA1_7_IRQn = ((uint16_t) 0x00A6U) + 32U,
      CLA1_8_IRQn = ((uint16_t) 0x00A7U) + 32U,
      RES208_IRQn = ((uint16_t) 0x00A8U) + 32U,
      RES209_IRQn = ((uint16_t) 0x00A9U) + 32U,
      RES210_IRQn = ((uint16_t) 0x00AAU) + 32U,
      RES211_IRQn = ((uint16_t) 0x00ABU) + 32U,
      RES212_IRQn = ((uint16_t) 0x00ACU) + 32U,
      RES213_IRQn = ((uint16_t) 0x00ADU) + 32U,
      RES214_IRQn = ((uint16_t) 0x00AEU) + 32U,
      RES215_IRQn = ((uint16_t) 0x00AFU) + 32U,
      XINT3_IRQn = ((uint16_t) 0x00B0U) + 32U,
      XINT4_IRQn = ((uint16_t) 0x00B1U) + 32U,
      XINT5_IRQn = ((uint16_t) 0x00B2U) + 32U,
      RES123_IRQn = ((uint16_t) 0x00B3U) + 32U,
      RES124_IRQn = ((uint16_t) 0x00B4U) + 32U,
      VCU_IRQn = ((uint16_t) 0x00B5U) + 32U,
      FPU_OVERFLOW_IRQn = ((uint16_t) 0x00B6U) + 32U,
      FPU_UNDERFLOW_IRQn = ((uint16_t) 0x00B7U) + 32U,
      EMIF_ERROR_IRQn = ((uint16_t) 0x00B8U) + 32U,
      RAM_CORRECTABLE_ERROR_IRQn = ((uint16_t) 0x00B9U) + 32U,
      FLASH_CORRECTABLE_ERROR_IRQn = ((uint16_t) 0x00BAU) + 32U,
      RAM_ACCESS_VIOLATION_IRQn = ((uint16_t) 0x00BBU) + 32U,
      SYS_PLL_SLIP_IRQn = ((uint16_t) 0x00BCU) + 32U,
      AUX_PLL_SLIP_IRQn = ((uint16_t) 0x00BDU) + 32U,
      CLA_OVERFLOW_IRQn = ((uint16_t) 0x00BEU) + 32U,
      CLA_UNDERFLOW_IRQn = ((uint16_t) 0x00BFU) + 32U,
} IRQn_Type;

/*
enum
{
    PIE_PRIORITY_RES106 = 1U,
    PIE_PRIORITY_SSI2 = 1U,
    PIE_PRIORITY_RES105 = 2U,

    PIE_PRIORITY_RES94 = 2U,
    PIE_PRIORITY_RES104 = 3U,
    PIE_PRIORITY_ADC0SEQ0 = 4U,

    PIE_PRIORITY_UART2 = 5U,
    PIE_PRIORITY_SSI1 = 5U,
    PIE_PRIORITY_RES72 = 6U,
    PIE_PRIORITY_ADC1SEQ0 = 7U,



      PIE_PRIORITY_GPIOA = 7U,
      PIE_PRIORITY_GPIOB = 7U,
      PIE_PRIORITY_GPIOC = 7U,
      PIE_PRIORITY_GPIOD = 7U,
      PIE_PRIORITY_GPIOE = 7U,
      PIE_PRIORITY_UART0 = 7U,
      PIE_PRIORITY_UART1 = 7U,
      PIE_PRIORITY_SSI0 = 7U,
      PIE_PRIORITY_I2C0 = 7U,
      PIE_PRIORITY_PWM0FAULT = 7U,
      PIE_PRIORITY_PWM0GEN0 = 7U,
      PIE_PRIORITY_PWM0GEN1 = 7U,
      PIE_PRIORITY_PWM0GEN2 = 7U,
      PIE_PRIORITY_QEI0 = 7U,
      PIE_PRIORITY_ADC0SEQ1 = 7U,
      PIE_PRIORITY_ADC0SEQ2 = 7U,
      PIE_PRIORITY_ADC0SEQ3 = 7U,
      PIE_PRIORITY_WDT01 = 7U,
      PIE_PRIORITY_TIMER0A = 7U,
      PIE_PRIORITY_TIMER0B = 7U,
      PIE_PRIORITY_TIMER1A = 7U,
      PIE_PRIORITY_TIMER1B = 7U,
      PIE_PRIORITY_TIMER2A = 7U,
      PIE_PRIORITY_TIMER2B = 7U,
      PIE_PRIORITY_ACOMP0 = 7U,
      PIE_PRIORITY_ACOMP1 = 7U,
      PIE_PRIORITY_RES43 = 7U,
      PIE_PRIORITY_SYSCTL = 7U,
      PIE_PRIORITY_FLASH = 7U,
      PIE_PRIORITY_GPIOF = 7U,
      PIE_PRIORITY_RES47 = 7U,
      PIE_PRIORITY_RES48 = 7U,
      PIE_PRIORITY_TIMER3A = 7U,
      PIE_PRIORITY_TIMER3B = 7U,
      PIE_PRIORITY_I2C1 = 7U,
      PIE_PRIORITY_QEI1 = 7U,
      PIE_PRIORITY_CAN0 = 7U,
      PIE_PRIORITY_CAN1 = 7U,
      PIE_PRIORITY_RES57 = 7U,
      PIE_PRIORITY_RES58 = 7U,
      PIE_PRIORITY_HIB = 7U,
      PIE_PRIORITY_USB = 7U,
      PIE_PRIORITY_PWM0GEN3 = 7U,
      PIE_PRIORITY_UDMASOFT = 7U,
      PIE_PRIORITY_UDMAERROR = 7U,
      PIE_PRIORITY_ADC1SEQ2 = 7U,
      PIE_PRIORITY_ADC1SEQ3 = 7U,
      PIE_PRIORITY_RES68 = 7U,
      PIE_PRIORITY_RES69 = 7U,
      PIE_PRIORITY_RES70 = 7U,
      PIE_PRIORITY_RES71 = 7U,
      PIE_PRIORITY_SSI3 = 7U,
      PIE_PRIORITY_UART3 = 7U,
      PIE_PRIORITY_UART4 = 7U,
      PIE_PRIORITY_UART5 = 7U,
      PIE_PRIORITY_UART6 = 7U,
      PIE_PRIORITY_UART7 = 7U,
      PIE_PRIORITY_RES80 = 7U,
      PIE_PRIORITY_RES81 = 7U,
      PIE_PRIORITY_RES82 = 7U,
      PIE_PRIORITY_RES83 = 7U,
      PIE_PRIORITY_I2C2 = 7U,
      PIE_PRIORITY_I2C3 = 7U,
      PIE_PRIORITY_TIMER4A = 7U,
      PIE_PRIORITY_TIMER4B = 7U,
      PIE_PRIORITY_RES88 = 7U,
      PIE_PRIORITY_RES89 = 7U,
      PIE_PRIORITY_RES90 = 7U,
      PIE_PRIORITY_RES91 = 7U,
      PIE_PRIORITY_RES92 = 7U,
      PIE_PRIORITY_RES93 = 7U,
      PIE_PRIORITY_RES96 = 7U,
      PIE_PRIORITY_RES97 = 7U,
      PIE_PRIORITY_RES98 = 7U,
      PIE_PRIORITY_RES99 = 7U,
      PIE_PRIORITY_RES100 = 7U,
      PIE_PRIORITY_RES101 = 7U,
      PIE_PRIORITY_RES102 = 7U,
      PIE_PRIORITY_RES103 = 7U,
      PIE_PRIORITY_RES107 = 7U,
      PIE_PRIORITY_TIMER5A = 7U,
      PIE_PRIORITY_TIMER5B = 7U,
      PIE_PRIORITY_WTIMER0A = 7U,
      PIE_PRIORITY_WTIMER0B = 7U,
      PIE_PRIORITY_WTIMER1A = 7U,
      PIE_PRIORITY_WTIMER1B = 7U,
}PIE_IPR_Priority;
*/




#endif /* XDRIVER_MCU_PIE_PERIPHERAL_XHEADER_PIE_ENUM_H_ */
